#!/usr/bin/env python
import os
import sys
import argparse
import mechanize
import ConfigParser

import transcode
import whatbrowser

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('release_urls', nargs='*', help='the URL where the release is located')
    parser.add_argument('-a', '--auto', help='attempt to automatically find transcode candidates')
    parser.add_argument('--config', help='the location of the configuration file (default: ~/.whatbetter)', \
                        default=os.path.expanduser('~/.whatbetter'))

    args = parser.parse_args()

    config = ConfigParser.SafeConfigParser()
    try:
        open(args.config)
        config.read(args.config)
    except:
        config.add_section('whatcd')
        config.set('whatcd', 'username', '')
        config.set('whatcd', 'password', '')
        config.set('whatcd', 'passkey', '')
        config.set('whatcd', 'data_dir', '')
        config.set('whatcd', 'torrent_dir', '')
        config.write(open(args.config, 'w'))
        print('Please edit the configuration file: %s' % args.config)
        sys.exit(2)
    finally:
        username = config.get('whatcd', 'username')
        password = config.get('whatcd', 'password')
        passkey = config.get('whatcd', 'passkey')
        data_dir = os.path.expanduser(config.get('whatcd', 'data_dir'))
        torrent_dir = os.path.expanduser(config.get('whatcd', 'torrent_dir'))

    browser = whatbrowser.WhatBrowser(username, password, passkey=passkey, data_dir=data_dir, torrent_dir=torrent_dir)

    if args.auto:
        releases = browser.transcode_candidates()
    elif len(args.release_urls) == 0:
        print("No release urls specified; assuming --auto")
        releases = browser.transcode_candidates()
    else:
        releases = [browser.get_release(url) for url in args.release_urls]

    for release in releases:
        codecs = release.formats_needed()
        print("Release found: %s" % release.title)
        print("Formats needed: %s" % ', '.join(codecs))
        print("Editions: %s" % len(release.editions))

        #for codec in codecs:
            #release.add_format(codec)

if __name__ == "__main__":
    main()
